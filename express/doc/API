API Documentation
=================

To hit the officially running site use https://openshift.redhat.com/.  For
a broker domain example:

https://openshift.redhat.com/broker/domain

Or for a full curl example:

curl https://openshift.redhat.com/broker/userinfo -d "password=mypass" -d 'json_data={ "rhlogin":"your_rh_login"}'


Create Domain
=============

Before performing any other express operations, users need to bind their login
with a domain.  To create a domain users need an ssh RSA key, available domain
name and their RHN login.

Submit via POST to: {openshift.express.server}/broker/domain
    Encode json string as http variable 'json_data',
    Include your password as http variable 'password'.

JSON String:
{
    'namespace': 'string',
    'rhlogin': 'login',
    'ssh': 'the key portion of an rsa key (excluding ssh-rsa and comment)',
    'alter': true - An optional flag to alter namespace and/or ssh key after creation,
    'debug': true - An optional flag to get debug information returned
}

Return JSON String (exit_code non-zero is failure):
{
    "debug":"Debug Output",
    "messages":"Other messages (outage notifications for example)",
    "result":"Result message",
    "data":<data_json_ex_below>,
    "exit_code": 0
}

Data JSON:
{
    "rhlogin":"<RH_LOGIN>",
    "uuid":"<USER_UUID>",
    "rhc_domain": "<RHC_DOMAIN>"
}


Application Control
===================

All application control is done via /broker/cartridge.  The below
documentation demonstrates how to create, destroy, start, restart, reload and
get basic status information about Express applications.

Action types include:

    configure: Create an application and start it
    deconfigure: Stop and delete an application
    start: Start a created but stopped application
    stop: Stop a running application
    restart: Restart a running application
    status: Get basic status information about an application

Submit via POST to: {openshift.express.server}/broker/cartridge
    Encode json string as http variable: 'json_data',
    Include your password as http variable 'password'

Submit JSON String:
{
    'cartridge': 'framework-type, e.g. php-5.3 - Valid types determined from /broker/cartlist with cart_type of standalone (only required for configure)',
    'action': 'configure, start, stop, restart, reload, status, deconfigure',
    'app_name': 'Application_name',
    'rhlogin': 'login',
    'debug': true - An optional flag to get debug information returned
}

Return JSON String (exit_code non-zero is failure):
{
    "debug":"Debug Output",
    "messages":"Other messages (outage notifications for example)",
    "result":"Result message",
    "data":<data_json_ex_below>,
    "exit_code": 0
}

Configure Data JSON (only returned for action=configure):
{
    'health_check_path': 'health',
    'uuid': 'app_uuid'
}

Emdedded Cartridges
===================

Embedded cartridges are managed through /broker/embed_cartridge.  The below
documentation demonstrates how to add and remove Express embedded cartridges.

Action types include:

    configure: Add an embedded cartridge
    deconfigure: Stop and remove an embedded cartridge

Submit via POST to: {openshift.express.server}/broker/embed_cartridge
    Encode json string as http variable: 'json_data',
    Include your password as http variable 'password'

Submit JSON String:
{
    'cartridge': 'framework-type, e.g. mysql-5.1 - Valid types determined from /broker/cartlist with cart_type of embedded',
    'action': 'configure, deconfigure',
    'app_name': 'Application_name',
    'rhlogin': 'login',
    'debug': true - An optional flag to get debug information returned
}

Return JSON String (exit_code non-zero is failure):
{
    "debug":"Debug Output",
    "messages":"Other messages (outage notifications for example)",
    "result":"Result message",
    "data":"",
    "exit_code": 0
}



User and Application Info
=========================

A list of running applications as well as basic user information is available
via /broker/userinfo.

Submit via POST to: {openshift.express.server}/broker/userinfo
    Encode json string as http variable 'json_data'
    Include your password as http variable 'password'

JSON String:
{
    'rhlogin': 'rhlogin',
    'debug': true - An optional flag to get debug information returned
}

Return JSON String (exit_code non-zero is failure):
{
    "debug":"Debug Output",
    "messages":"Other messages (outage notifications for example)",
    "result":"Result message",
    "data":<data_json_ex_below>,
    "exit_code": 0
}

Data JSON:
{
    "app_info":{
        "newapp":{
            "framework":"<FRAMEWORK_TYPE>",
            "creation_time":"<CREATION_TIME>",
            "uuid":"<APPLICATION_UUID>",
            "embedded":{
                "<EMBEDDED_FRAMEWORK_TYPE>":{
                    "info":"Info about embedded cartridge"
                }
            }
        }
    },
    "user_info":{
        "rhlogin":"<RH_LOGIN>",
        "uuid":"<USER_UUID>",
        "ssh_key":"<PUB_SSH_KEY>",
        "rhc_domain":"<RHC_DOMAIN>",
        "namespace":"<DOMAIN_NAMESPACE>"
    }
}

Cartridge List
=========================

A list of available cartridges is available
via /broker/cartlist.

Submit via POST to: {openshift.express.server}/broker/cartlist
    Encode json string as http variable 'json_data'

JSON String:
{
    'cart_type': 'standalone, embedded',
    'debug': true - An optional flag to get debug information returned
}

Return JSON String (exit_code non-zero is failure):
{
    "debug":"Debug Output",
    "messages":"Other messages (outage notifications for example)",
    "result":"Result message",
    "data":<data_json_ex_below>,
    "exit_code": 0
}

Data JSON:
{
    "carts":["php-5.3", "ruby-1.8", "python-2.6", "perl-5.10", "jbossas-7", "jbosseap-6.0"]
}

